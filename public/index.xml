<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dtoma blog</title>
    <link>/</link>
    <description>Recent content on dtoma blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on CMake</title>
      <link>/posts/cmake-cheat-sheet/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/cmake-cheat-sheet/</guid>
      <description>&lt;p&gt;How to setup a project using modern CMake features - build, manage dependencies, run tests.&lt;/p&gt;</description>
      <content>&lt;p&gt;How to setup a project using modern CMake features - build, manage dependencies, run tests.&lt;/p&gt;
&lt;h2 id=&#34;useful-resources&#34;&gt;Useful Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crascit.com/professional-cmake/&#34;&gt;Professional CMake&lt;/a&gt; Book&lt;/li&gt;
&lt;li&gt;CMake &lt;a href=&#34;https://cmake.org/cmake/help/latest/&#34;&gt;official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTest &lt;a href=&#34;https://gitlab.kitware.com/cmake/community/-/wikis/doc/ctest/Testing-With-CTest&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;The simplest &lt;code&gt;CMakeLists.txt&lt;/code&gt; contains:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cmake_minimum_required&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;VERSION 3.2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# `VERSION` and `LANGUAGES` are optional&lt;/span&gt;
project&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;myProject VERSION 0.0.1 LANGUAGES CXX&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
add_executable&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;example main.cpp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can generate build files for the current platform, then build an executable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir build &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cd build  &lt;span style=&#34;color:#75715e&#34;&gt;# Out-of-source build&lt;/span&gt;
cmake ..                 &lt;span style=&#34;color:#75715e&#34;&gt;# Generate build files&lt;/span&gt;
cmake --build .          &lt;span style=&#34;color:#75715e&#34;&gt;# Run build&lt;/span&gt;
./Debug/example.exe      &lt;span style=&#34;color:#75715e&#34;&gt;# Run the resulting binary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;installing-dependencies-that-use-other-build-systems&#34;&gt;Installing Dependencies That Use Other Build Systems&lt;/h2&gt;
&lt;p&gt;This will create build steps at configure time, and download/extract/build/etc. at build time. We then need to declare the dependencies in the right order. This incomplete example shows the gist of it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;include&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ExternalProject&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

ExternalProject_Add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;boost
    PREFIX boost
    URL https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.zip
    URL_HASH SHA256&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;8c20440aaba21dd963c0f7149517445f50c62ce4eb689df2b5544cc89e6e621e
    CONFIGURE_COMMAND &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;_BOOTSTRAP_COMMAND&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
    BUILD_COMMAND &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;_B2_COMMAND&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
    BUILD_IN_SOURCE &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    INSTALL_COMMAND &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/geode-native/blob/develop/dependencies/boost/CMakeLists.txt&#34;&gt;Installing Boost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installing-dependencies-that-use-cmake&#34;&gt;Installing Dependencies That Use CMake&lt;/h2&gt;
&lt;p&gt;We can use &lt;code&gt;CMake&lt;/code&gt; to download and install dependencies.&lt;/p&gt;
&lt;p&gt;The following setup will clone GitHub repos, and install the libraries using their CMake files during the build step:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cmake_minimum_required&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;VERSION 3.8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

include&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;FetchContent&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

FetchContent_Declare&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;googletest
  GIT_REPOSITORY https://github.com/google/googletest.git
  GIT_TAG release-1.10.0
&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

FetchContent_Declare&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fmt
  GIT_REPOSITORY https://github.com/fmtlib/fmt.git
  GIT_TAG 6.1.2
&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

FetchContent_Declare&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;benchmark
  GIT_REPOSITORY https://github.com/google/benchmark
&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Fix for googletest, otherwise we get LNK2038 errors on Windows&lt;/span&gt;
set&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gtest_force_shared_crt ON CACHE BOOL &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; FORCE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Clone repos and install libraries&lt;/span&gt;
FetchContent_MakeAvailable&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;googletest fmt benchmark&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cmake.org/pipermail/cmake/2019-March/069206.html&#34;&gt;Installing github.com/nlohmann/json&lt;/a&gt; &amp;lt;1&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nlohmann/json/issues/1634&#34;&gt;Installing github.com/nlohmann/json&lt;/a&gt; &amp;lt;2&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-tests&#34;&gt;Running Tests&lt;/h2&gt;
&lt;p&gt;In the root &lt;code&gt;CMakeLists.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;enable_testing&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
include&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;GoogleTest&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# This directory contains its own CMakeLists.txt&lt;/span&gt;
add_subdirectory&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;test_directory&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using the following example test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;gtest/gtest.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
TEST(Example, TestNothing) {
    EXPECT_EQ(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We have a &lt;code&gt;CMakeLists.txt&lt;/code&gt; in &lt;code&gt;test_directory&lt;/code&gt; to builds the test(s):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;add_executable&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;myTests test.cpp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
target_link_libraries&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;myTests gtest_main&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
gtest_discover_tests&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;myTests&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Build, then run using &lt;code&gt;CTest&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cmake ..         &lt;span style=&#34;color:#75715e&#34;&gt;# Generate build files&lt;/span&gt;
cmake --build .  &lt;span style=&#34;color:#75715e&#34;&gt;# Build test executable&lt;/span&gt;
ctest            &lt;span style=&#34;color:#75715e&#34;&gt;# Run tests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the following example output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;PS C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;amien&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;roject&lt;span style=&#34;color:#ae81ff&#34;&gt;\b&lt;/span&gt;uild&amp;gt; ctest
Test project C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;amien&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;roject&lt;span style=&#34;color:#ae81ff&#34;&gt;\b&lt;/span&gt;uild
    Start 1: Example.TestNothing
1/1 Test &lt;span style=&#34;color:#75715e&#34;&gt;#1: Example.TestNothing .......   Passed    0.01 sec&lt;/span&gt;

100% tests passed, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; tests failed out of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

Total Test time &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;real&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;   0.03 sec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;! Caveat:&lt;/strong&gt; After installing dependencies using &lt;code&gt;FetchContent_Declare&lt;/code&gt;, &lt;code&gt;CTest&lt;/code&gt; also picks up their tests.&lt;/p&gt;
&lt;p&gt;I have found 2 workarounds so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;filter tests using &lt;code&gt;ctest -R &amp;lt;MyTests&amp;gt;&lt;/code&gt; (run only tests with names containing &lt;code&gt;&amp;lt;MyTests&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;when possible, set options to not build tests before the call to &lt;code&gt;FetchContent_MakeAvailable&lt;/code&gt;, for example &lt;code&gt;set(BENCHMARK_ENABLE_TESTING OFF)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;build-type&#34;&gt;Build type&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Release&lt;/li&gt;
&lt;li&gt;Debug&lt;/li&gt;
&lt;li&gt;RelWithDebInfo&lt;/li&gt;
&lt;li&gt;MinSizeRel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On some platforms, we can set the build type from the configuration generation phase:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Release ../source
cmake --build .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On other platforms eg. Windows, it has to be done at the build phase:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cmake ../source
cmake --build . --config Release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;project-structure&#34;&gt;Project Structure&lt;/h2&gt;
&lt;p&gt;I like to use what seems to be called a &amp;ldquo;Superbuild&amp;rdquo; in CMake parlance:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Where dependencies do not use CMake as their build system, a superbuild tends to be the preferred structure. This treats each dependency as its own separate build, with the main project directing the overall sequence and the way details are passed from one dependency’s build to another. Each separate build is added to the main build using &lt;code&gt;ExternalProject&lt;/code&gt;. Such an arrangement allows CMake to look at what each build produces and automatically detect information that can then be passed on to other dependencies, thereby avoiding having to manually hard code that information in the main build.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;- Professional CMake 5th Edition&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When necessary we can use &lt;code&gt;ExternalProject&lt;/code&gt;, and when we can there is the simpler &lt;code&gt;FetchContent&lt;/code&gt; to install dependencies. Most projects already provide knobs to tweak builds, tests, and make it convenient to integrate their projects into ours.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+------------------+-----------------+
| ExternalProjects |                 |
+------------------+                 |
|                                    +------+
|     Boost                          |      |
|                                    |      |
+------------------------------------+      |
                                            |
                                            |
+--------------+---------------------+      |
| FetchContent |                     |      |
+--------------+      fmt            |      |
|                                    &amp;lt;------+
|    googletest                      |
|               google/benchmark     |
|       re2                          +------+
|            nlohmann/json           |      |
|                                    |      |
+------------------------------------+      |
                                            |
                                            |
+---------------+--------------------+      |
| Local Project |                    |      |
+---------------+                    |      |
|                                    &amp;lt;------+
|     main.cpp     main.hpp          |
|                                    |
+------------------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;custom-targets&#34;&gt;Custom Targets&lt;/h2&gt;
&lt;p&gt;As part of our workflow, we may need to call external commands or binaries. For example, if we build a benchmark suite:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;add_executable&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;order_book_bench bench.cpp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

target_link_libraries&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;order_book_bench PRIVATE benchmark::benchmark order_book&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

add_custom_target&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runbench COMMAND order_book_bench&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can then call the target as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd build &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cmake --build . --target runbench
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Books in 2020</title>
      <link>/posts/books-in-2020/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/books-in-2020/</guid>
      <description>&lt;p&gt;A list of books read in 2020.&lt;/p&gt;</description>
      <content>&lt;p&gt;A list of books read in 2020.&lt;/p&gt;
&lt;h2 id=&#34;programming&#34;&gt;Programming&lt;/h2&gt;
&lt;h3 id=&#34;professional-cmake-a-practical-guide&#34;&gt;Professional CMake: A Practical Guide&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Craig SCOTT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;★ ★ ★ ★ ★ ★ ★ ☆ ☆ ☆&lt;/p&gt;
&lt;p&gt;A reference manual for CMake. I was hoping for something more like a project-based walkthrough, but it is very thorough and a useful reference for many topics.&lt;/p&gt;
&lt;p&gt;I often discover a feature in the book, try to use it, then Google my way around making it work for my use case. Overall, this has simplified my build configurations greatly, for example using &lt;a href=&#34;https://cmake.org/cmake/help/latest/module/FetchContent.html#command:fetchcontent_declare&#34;&gt;FetchContent_Declare&lt;/a&gt; and &lt;a href=&#34;https://cmake.org/cmake/help/latest/module/FetchContent.html#command:fetchcontent_makeavailable&#34;&gt;FetchContent_MakeAvailable&lt;/a&gt; to manage dependencies.&lt;/p&gt;
&lt;p&gt;There are also pages summarizing best practices which I find very useful to get an idea of how to do thing well.&lt;/p&gt;
&lt;h2 id=&#34;career&#34;&gt;Career&lt;/h2&gt;
&lt;h3 id=&#34;developer-hegemony&#34;&gt;Developer Hegemony&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The Future of Labor&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Erik DIETRICH&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read in Progress&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The author&amp;rsquo;s thoughts on how to manage one&amp;rsquo;s career as a programmer, and his observations and experiences from working in large companies, startups, and as an independant consultant.&lt;/p&gt;
&lt;h2 id=&#34;nonfiction&#34;&gt;Nonfiction&lt;/h2&gt;
&lt;h3 id=&#34;the-visual-display-of-quantitative-information&#34;&gt;The Visual Display of Quantitative Information&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Edward R. TUFTE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read in Progress&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A book about&amp;hellip; what the title says.&lt;/p&gt;
&lt;p&gt;The first part of the book shows how people have found ways to display data in order to make it easy to grasp. My favorite one is this map, showing the size of Napoleon&amp;rsquo;s army during his campaign in Russia:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/minard-napoleon-russia-map.png&#34; alt=&#34;Minard&amp;rsquo;s map of Napoleon&amp;rsquo;s Russia campaign&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ur-fascism&#34;&gt;Ur-Fascism&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Umberto ECO&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;★ ★ ★ ★ ★ ★ ★ ★ ★ ☆&lt;/p&gt;
&lt;p&gt;Not really a book, just 9 pages. Umberto Eco writes about &amp;ldquo;what is fascism?&amp;rdquo;. I think this is a useful question to ask even today, as we hear people calling each other fascists so often (especially on Twitter).&lt;/p&gt;
&lt;p&gt;He observes that many regimes have been called &amp;ldquo;fascist&amp;rdquo; while having different characteristics: for example, Hitler, Mussolini, and Franco ran very different ships. This brief text tries to define &amp;ldquo;Ur-Fascism&amp;rdquo;, or &amp;ldquo;Eternal Fascism&amp;rdquo;, the root of all fascisms, as having the following traits (edited for brevity):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cult of tradition&lt;/strong&gt;, being &lt;em&gt;syncretistic&lt;/em&gt; (the amalgamation or attempted amalgamation of different religions, cultures, or schools of thought) while tolerating inevitable contradictions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rejection of modernism&lt;/strong&gt;, cult of &amp;ldquo;action for action&amp;rsquo;s sake&amp;rdquo; (&lt;em&gt;action being beautiful in itself, it must be taken before, or without, any previous reflection&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disagreement is treason&lt;/strong&gt; (because &lt;em&gt;no syncretistic faith can withstand analytical criticism&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Obsession with a plot&lt;/strong&gt;, common ennemy or ennemies, or frustrations (&lt;em&gt;When I was a boy I was taught to think of Englishmen as the five-meal people.They ate more frequently than the poor but sober Italians&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contempt for the weak&lt;/strong&gt;, popular elitism (&lt;em&gt;Every subordinate leader despises his own underlings, and each of them despises his inferiors. This reinforces the sense of mass elitism&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Newspeak&lt;/strong&gt; (&lt;em&gt;Nazi or Fascist schoolbooks made use of an impoverished vocabulary, and an elementary syntax, in order to limit the instruments for complex and critical reasoning. But we must be ready to identify other kinds of Newspeak, even if they take the apparently innocent form of a popular talk show.&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;creativity-inc&#34;&gt;Creativity, Inc&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Ed CATMULL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read in Progress&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/18077903-creativity-inc&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A book about the creation, experiences, and lessons learnt at Pixar.&lt;/p&gt;
&lt;p&gt;The first part tells us the story of how the author came to run Pixar, and his problems learning how to manage people. He takes the example of Toy Story and Toy Story 2, and how difficult it was to keep his teams engaged and working in good intelliegence from one project to another:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I read many such [business] books as I set about trying to become a better, more effective manager. [&amp;hellip;] These books were stocked with catchy phrases like &amp;ldquo;Dare to fail!&amp;rdquo; or &amp;ldquo;Follow people and people will follow you!&amp;rdquo; or &amp;ldquo;Focus, focus, focus!&amp;rdquo; [&amp;hellip;] But none of them gave me any cluse as to what to do or what I should focus on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Clearly, it wasn&amp;rsquo;t enough for managers to have good ideas - they had to be able to engender support for those ideas among the people who&amp;rsquo;d be charged with employing them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;My total ignorance of this dynamic [Note: 2 teams at odds with each other] caught me by surprise. My door had always been open! I&amp;rsquo;d assumed that that would guarantee me a place in the loop, at least when it came to major sources of tension like this.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author also talks about some of his principles, like hiring smart people, and making sure everyone can take responsibility for the quality of the end product:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And ever since, I&amp;rsquo;ve made a policy of trying to hire people who are smarter than I am. The obvious payoffs of exceptional people are that they innovate, excel, and generally make your company - and, by extension, you - look good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Japanese companies that implemented Deming&amp;rsquo;s ideas made it easy for workers to do so: They installed a cord that anyone could pull in order to bring production to a halt. Before long, Japanese companies were enjoying unheard-of levels of quality, productivity, and market share.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;fiction&#34;&gt;Fiction&lt;/h2&gt;
&lt;h3 id=&#34;the-murder-of-roger-ackroyd&#34;&gt;The Murder of Roger Ackroyd&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Agatha CHRISTIE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/16328.The_Murder_of_Roger_Ackroyd&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Can&amp;rsquo;t really say why it&amp;rsquo;s good without spoiling it, but it&amp;rsquo;s good and well worth a read. An unusual plot twist.&lt;/p&gt;
&lt;h2 id=&#34;science-fiction&#34;&gt;Science-Fiction&lt;/h2&gt;
&lt;h3 id=&#34;14&#34;&gt;14&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Peter CLINES&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/15062217-14&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A guy finds a nice studio in an old building, for a surprisingly cheap rent. Turns out the building is weird (really weird) and stuff happens as the protagonist and his neighbors try to understand more about it.&lt;/p&gt;
&lt;p&gt;I found this book fun and easy to read. The characters and dialogues were entertaining and the plot was interesting.&lt;/p&gt;</content>
    </item>
    
    <item>
      <title>Pytest cheat sheet</title>
      <link>/posts/pytest-cheat-sheet/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/pytest-cheat-sheet/</guid>
      <description>&lt;p&gt;Some notes about the features I use the most from &lt;a href=&#34;https://docs.pytest.org/en/latest/&#34;&gt;pytest&lt;/a&gt;.&lt;/p&gt;</description>
      <content>&lt;p&gt;Some notes about the features I use the most from &lt;a href=&#34;https://docs.pytest.org/en/latest/&#34;&gt;pytest&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;setupteardown&#34;&gt;SetUp/TearDown&lt;/h2&gt;
&lt;p&gt;We can use &lt;code&gt;yield&lt;/code&gt; in pytest fixtures to emulate class-based tests SetUp/TearDown methods.
It works particularly well with decorators - the example below will run &lt;code&gt;test_foo&lt;/code&gt; with a patched &lt;code&gt;module.function&lt;/code&gt;, then reset the patched function after the test finishes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; unittest.mock &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; patch
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pytest

&lt;span style=&#34;color:#a6e22e&#34;&gt;@pytest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fixture
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;my_fixture&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; patch(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;module.function&amp;#39;&lt;/span&gt;, return_value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;@pytest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;usefixtures(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my_fixture&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_foo&lt;/span&gt;():
    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; module
    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; module&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;function() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;fixtures-scope-and-autouse&#34;&gt;Fixtures scope and autouse&lt;/h2&gt;
&lt;p&gt;Fixtures can have a scope that is one of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;function&lt;/li&gt;
&lt;li&gt;class&lt;/li&gt;
&lt;li&gt;module&lt;/li&gt;
&lt;li&gt;package&lt;/li&gt;
&lt;li&gt;session (the whole test run)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the &lt;code&gt;autouse&lt;/code&gt; parameter, we can automatically load a function for all the tests in a module, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; mymodels &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SomeModel

&lt;span style=&#34;color:#a6e22e&#34;&gt;@django_db&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;@pytest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fixture(scope&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;module&amp;#39;&lt;/span&gt;, autouse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fixture_populate_database&lt;/span&gt;():
    SomeModel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;objects&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create(foo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Bar&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_foo_is_bar&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; list(SomeModel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;objects&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values_list(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sadly, we can&amp;rsquo;t use session-level fixtures that require a database access. There is a &lt;a href=&#34;https://github.com/pytest-dev/pytest-django/issues/514&#34;&gt;GitHub issue&lt;/a&gt; open.&lt;/p&gt;
&lt;h2 id=&#34;testing-logs&#34;&gt;Testing logs&lt;/h2&gt;
&lt;p&gt;We can use the &lt;code&gt;caplog&lt;/code&gt; fixture, then filter its output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_my_logs&lt;/span&gt;(caplog):
    fixture &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; some_fixture()

    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; some_function() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; some_result

    &lt;span style=&#34;color:#75715e&#34;&gt;# filter by level and logger&lt;/span&gt;
    info_logs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        line
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; logger, level, line &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; caplog&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;record_tuples
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; level &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;INFO &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; logger &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;some_module.some_function&amp;#39;&lt;/span&gt;
    ]

    &lt;span style=&#34;color:#75715e&#34;&gt;# assert the logs are what we expected&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; info_logs &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;first message&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;second_message&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;third_message: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; fixture&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;id,
    ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;parametrized-tests&#34;&gt;Parametrized tests&lt;/h2&gt;
&lt;p&gt;It can be useful to run a single test over multiple inputs. Using the &lt;code&gt;parametrize&lt;/code&gt; decorator,
we can list inputs that we expect to succeed or fail.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@pytest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parametrize(
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test_input,expected&amp;#34;&lt;/span&gt;,
    [
        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3+5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;),
        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2+4&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;),
        pytest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;param(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6*9&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;, marks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pytest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xfail)
    ],
)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_eval&lt;/span&gt;(test_input, expected):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; eval(test_input) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; expected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Books in 2019</title>
      <link>/posts/books-in-2019/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/books-in-2019/</guid>
      <description>&lt;p&gt;A list of books read in 2019.&lt;/p&gt;</description>
      <content>&lt;p&gt;A list of books read in 2019.&lt;/p&gt;
&lt;h2 id=&#34;nonfiction&#34;&gt;Nonfiction&lt;/h2&gt;
&lt;h3 id=&#34;when-genius-failed&#34;&gt;When Genius Failed&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;The Rise and Fall of Long-Term Capital Management&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Roger LOWENSTEIN&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/10669&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A book about the rise and fall of &lt;a href=&#34;https://en.wikipedia.org/wiki/Long-Term_Capital_Management&#34;&gt;Long-Term Capital Management&lt;/a&gt;, a hedge fund from the 1990s. I thought it was interesting to see famous academics joining the team to confront their theories to the reality of the markets. Many famous names in the book. The narration is a bit slow, it could have been a few pages shorter, but overall interesting and entertaining.&lt;/p&gt;
&lt;p&gt;Key takeaways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Black swans happen, and are not always covered or anticipated by academics&lt;/li&gt;
&lt;li&gt;The more leverage we have, the more we need to prepare for unlikely events&lt;/li&gt;
&lt;li&gt;When things get bad enough, governments and banks can work together to avoid worst-case scenarios&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;black-edge&#34;&gt;Black Edge&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Inside Information, Dirty Money, and the Quest to Bring Down the Most Wanted Man on Wall Street&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sheelah KOLHATKAR&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/32284263&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The story of &lt;a href=&#34;https://en.wikipedia.org/wiki/S.A.C._Capital_Advisors&#34;&gt;SAC Capital&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Steven_A._Cohen&#34;&gt;Steven Cohen&lt;/a&gt;, all the controversies and cases that surrounded them. As with many other books of this style, I would have liked it a bit shorter and more to the point, but it is interesting and gives insight into the world of hedge funds from a different point of view than the LTCM book.&lt;/p&gt;
&lt;h3 id=&#34;bad-blood&#34;&gt;Bad Blood&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Secrets and Lies in a Silicon Valley Startup&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;John CARREYROU&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/37976541&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The story of biotech startup &lt;a href=&#34;https://en.wikipedia.org/wiki/Theranos&#34;&gt;Theranos&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/Elizabeth_Holmes&#34;&gt;Elizabeth Holmes&lt;/a&gt;. I had only head about the company in passing, and was amazed at how much money and talent they were able to get a hold of before things went south. Famous people got more or less conned into giving them money! A bit long towards the end, but a good read about the way Sillicon Valley entrepreneurs and VCs can sometimes go too far.&lt;/p&gt;
&lt;h3 id=&#34;the-man-who-solved-the-market&#34;&gt;The Man Who Solved the Market&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;How Jim Simons Launched the Quant Revolution&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Gregory ZUCKERMAN&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/43889703&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A kind of biography of &lt;a href=&#34;https://en.wikipedia.org/wiki/Jim_Simons_(mathematician)&#34;&gt;Jim Simons&lt;/a&gt; and his hedge fund &lt;a href=&#34;https://en.wikipedia.org/wiki/Renaissance_Technologies&#34;&gt;Renaissance Technologies&lt;/a&gt;. Nothing technical in it, but it&amp;rsquo;s an easy read, and has interesting anecdotes about the founder and the employees of the famous hedge fund.&lt;/p&gt;
&lt;h3 id=&#34;weapons-of-math-destruction&#34;&gt;Weapons of Math Destruction&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;How Big Data Increases Inequality and Threatens Democracy&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cathy O&amp;rsquo;NEIL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/28186015-weapons-of-math-destruction&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The book is a short list of concrete examples, breaking the illusion of impartiality in data-driven models. I think the closing paragraphs of the book explain its point clearly:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Data is not going away. [&amp;hellip;] Predictive models are, increasingly, the tools we will be relying on to run our institutions, deploy our resources, and manage our lives. [&amp;hellip;] these models are constructed not just from data but from the choices we make about which data to pay attention to - and which to leave out. These choices are not just about logistics, profits, and efficiency. They are fundamentally moral.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The book&amp;rsquo;s examples and case studies include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Moneyball&lt;/li&gt;
&lt;li&gt;Statistics on recidivism&lt;/li&gt;
&lt;li&gt;College and university rankings&lt;/li&gt;
&lt;li&gt;Personality tests in job applications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think this book makes an important point, but stops short of offering a solution.&lt;/p&gt;
&lt;h2 id=&#34;finance&#34;&gt;Finance&lt;/h2&gt;
&lt;h3 id=&#34;the-little-book-of-common-sense-investing&#34;&gt;The Little Book of Common Sense Investing&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;John BOGLE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/171127&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A short book with lots of diagrams showing why it can make sense to invest in &lt;a href=&#34;https://www.investopedia.com/terms/e/etf.asp&#34;&gt;ETFs&lt;/a&gt; rather than active funds. Clear and easy to follow.&lt;/p&gt;
&lt;p&gt;Two points that summarize this book, in my opinion:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Few active money managers beat the market&lt;/li&gt;
&lt;li&gt;If you are paying management fees, then your active money manager would need to beat the market by more than the fees to be worth it&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I believe high school or university student should read this, to get a basic idea of what to do with their money once they start earning it.&lt;/p&gt;
&lt;h2 id=&#34;fiction&#34;&gt;Fiction&lt;/h2&gt;
&lt;h3 id=&#34;men-without-women&#34;&gt;Men Without Women&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Haruki MURAKAMI&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/33652490&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A collection of short stories, reminded me of &amp;ldquo;Je voudrais que quelqu&amp;rsquo;un m&amp;rsquo;attende quelque part&amp;rdquo; from Anna Gavalda. The stories are slices of life, each one about a man&amp;rsquo;s relationship with a woman. The endings are very open to interpretation, somewhat bittersweet.&lt;/p&gt;
&lt;p&gt;A good quick read.&lt;/p&gt;
&lt;h3 id=&#34;jack-reacher&#34;&gt;Jack Reacher&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Lee CHILD&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/series/40549&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;killing-floor-book-1&#34;&gt;Killing Floor (book 1)&lt;/h4&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;First book of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Jack_Reacher_(book_series)&#34;&gt;Jack Reacher series&lt;/a&gt;. First person narration, lots of short sentences, making it feel like the main characters has some behavioral flaws. Lots of action, bit of a Jason Bourne on steroids. Reads nice and fast, entertaining.&lt;/p&gt;
&lt;h4 id=&#34;die-trying-book-2&#34;&gt;Die Trying (book 2)&lt;/h4&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Second book of the Jack Reacher series. This time in third person narration, we have to follow multiple characters at the same time, which I felt didn&amp;rsquo;t flow as nicely as the first book. Definitely Jason Bourne on steroids.&lt;/p&gt;
&lt;h4 id=&#34;books-3-to-10&#34;&gt;Books 3 to 10&lt;/h4&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;All easy and entertaining reads. Plots are okay, lots of action, a few side stories along the way to keep the main character interesting. Will read more of this series.&lt;/p&gt;
&lt;h2 id=&#34;fantasy&#34;&gt;Fantasy&lt;/h2&gt;
&lt;h3 id=&#34;the-dresden-files-books-1-to-15&#34;&gt;The Dresden Files (books 1 to 15)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Jim BUTCHER&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/series/40346&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Dresden_Files&#34;&gt;Harry Dresden&lt;/a&gt; is the only wizard detective of Chicago. He&amp;rsquo;s a confident guy who wields both revolvers and fireballs (and sarcasm). As he investigates a series of homicides, he ends up in more trouble he could ever have imagined. As the series goes on, the main character learns a lot and matures along the way, makes friends, loses friends. Very entertaining!&lt;/p&gt;
&lt;h3 id=&#34;the-mistborn-trilogy&#34;&gt;The Mistborn Trilogy&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Brandon SANDERSON&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Book                  | Rating                                 | Goodreads
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
The Final Empire      | &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; | &lt;a href=&#34;https://www.goodreads.com/book/show/68428&#34;&gt;Link&lt;/a&gt;
The Well of Ascension | &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; | &lt;a href=&#34;https://www.goodreads.com/book/show/68429&#34;&gt;Link&lt;/a&gt;
The Hero of Ages      | &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; | &lt;a href=&#34;https://www.goodreads.com/book/show/2767793&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In a world where people can eat metals to gain magical powers, a young woman goes from beggar to hero when she discovers her own rare and powerful abilities.&lt;/p&gt;
&lt;p&gt;I loved the first tome, liked the second one, and slowly bore through the third one. I felt that it started off full of action, new ideas, punchy dialogue, and slowly became slower, more depressing, with a lot of inner dialogue from multiple characters towards the end. I guess since the end of the world is coming, it makes sense to change the mood of the characters accordingly, I just had a hard time finishing it.&lt;/p&gt;
&lt;p&gt;I was also not a fan of the ending, which felt a bit like a Deus Ex Machina. Overall worth a read.&lt;/p&gt;
&lt;h3 id=&#34;the-black-prism&#34;&gt;The Black Prism&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Brent WEEKS&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/7165300&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An awkward kid turns out to be the son of the most powerful man in the world. Magic works in an interesting way, not unlike in the Mistborn trilogy. Easy to read and entertaining, will read the rest of the saga.&lt;/p&gt;
&lt;h3 id=&#34;the-kingkiller-chronicles&#34;&gt;The Kingkiller Chronicles&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Patrick ROTHFUSS&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Book                 | Rating                                 | Goodreads
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
The Name of the Wind | &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; | &lt;a href=&#34;https://www.goodreads.com/book/show/186074&#34;&gt;Link&lt;/a&gt;
The Wise Man&amp;rsquo;s Fear  | &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; | &lt;a href=&#34;https://www.goodreads.com/book/show/1215032&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The story, told by himself, of &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Kingkiller_Chronicle&#34;&gt;Kvothe&lt;/a&gt;, a musician-wizard-thief-assassin that seems to be infamous for reasons we still don&amp;rsquo;t know. His parents were killed by mysterious bad guys when he was still a (naive genius) kid, and he decided to do what it takes to find out more about them. The story has ups and downs, but it is well-written and mostly captivating. More books yet to come in this saga, and I will definitely read them.&lt;/p&gt;
&lt;h2 id=&#34;science-fiction&#34;&gt;Science-fiction&lt;/h2&gt;
&lt;h3 id=&#34;childhoods-end&#34;&gt;Childhood&amp;rsquo;s End&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Arthur C. CLARKE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/414999&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One of my favorite and most depressing reads this year. The story of a community that starts their own utopic society, mysterious aliens that come to benevolently rule earth, and evolution. Thought-provoking and hard not to finish in one go.&lt;/p&gt;
&lt;h4 id=&#34;the-lathe-of-heaven&#34;&gt;The Lathe of Heaven&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Ursula K. LE GUIN&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/59924&#34;&gt;Goodreads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another of my favorite books this year. The main character can alter reality while dreaming, his psychiatrist realizes this and tries to work with it, only for things to go really out of whack. Psychedelic and mesmerizing.&lt;/p&gt;</content>
    </item>
    
  </channel>
</rss>
